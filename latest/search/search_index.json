{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"mion mion is a bare-metal operating system for network devices, with security and supportability at it's core. View it on GitHub Welcome! This documentation is for dunfell-2021.06 \"Dernish\". For other versions check the version selector in the upper left menu. mion provides a network operating system(NOS) focusing on enterprise level managed switches with support for the Open Network Install Environment(ONIE) and the Open Network Linux Platform API . The core function of mion is providing a secure, reliable, and performant operating system. Designed for environments that maintain critical elements such as Critical National Infrastructure, scalable from datacenter to telco, all done securely. As network devices are highly visible targets, where attacks could cause catastrophic harm through failure, a secure software foundation with a strong and supportive community is vital. With mion being built from the Yocto Project, security is baked in. The mion team values inclusiveness and diversity. This is not just a slogan for us, it is the philosophy that underpins the team. We work hard to ensure that we respect, value and encourage participation from every walk of life. For us, community is core. If you'd like to jump right in, check out our getting started guide . To get involved, or simply say hello, see our community page. \u00a9 2021 Network Grade Linux. Copyright \u00a9 2021 Network Grade Linux The Linux Foundation\u00ae. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page page. Linux is a registered trademark of Linus Torvalds. Privacy Policy and Terms of Use .","title":"Home"},{"location":"#mion","text":"mion is a bare-metal operating system for network devices, with security and supportability at it's core. View it on GitHub Welcome! This documentation is for dunfell-2021.06 \"Dernish\". For other versions check the version selector in the upper left menu. mion provides a network operating system(NOS) focusing on enterprise level managed switches with support for the Open Network Install Environment(ONIE) and the Open Network Linux Platform API . The core function of mion is providing a secure, reliable, and performant operating system. Designed for environments that maintain critical elements such as Critical National Infrastructure, scalable from datacenter to telco, all done securely. As network devices are highly visible targets, where attacks could cause catastrophic harm through failure, a secure software foundation with a strong and supportive community is vital. With mion being built from the Yocto Project, security is baked in. The mion team values inclusiveness and diversity. This is not just a slogan for us, it is the philosophy that underpins the team. We work hard to ensure that we respect, value and encourage participation from every walk of life. For us, community is core. If you'd like to jump right in, check out our getting started guide . To get involved, or simply say hello, see our community page. \u00a9 2021 Network Grade Linux. Copyright \u00a9 2021 Network Grade Linux The Linux Foundation\u00ae. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page page. Linux is a registered trademark of Linus Torvalds. Privacy Policy and Terms of Use .","title":"mion"},{"location":"ACCESSIBILITY/","text":"Accessibility Note: we are aware that this version of our documentation does not pass all This is due to issues with the theme. We humbly apologize for this, and are working to address this as soon as possible. The mion project, including this site, endeavours to be as accessible as possible with respect to the World Wide Web Consortium's (w3c) Web Accessibilty Initiative (WAI), and Web Content AccessibilityGuidelines , and the needs of our community. To that end, all alterations to this documentation is checked with the following tools until they don't provide errors from an accessibility point of view: tota11y browser app; Google Chrome's Lighthouse , running in incognito mode; WAVE Web Accessibility Evaluation Tool. If you have any questions or feedback, you can join our community or reach out to our Community Lead . To ensure that contact info is up to date, check that you're reading the latest version of this page .","title":"Accessibility"},{"location":"ACCESSIBILITY/#accessibility","text":"Note: we are aware that this version of our documentation does not pass all This is due to issues with the theme. We humbly apologize for this, and are working to address this as soon as possible. The mion project, including this site, endeavours to be as accessible as possible with respect to the World Wide Web Consortium's (w3c) Web Accessibilty Initiative (WAI), and Web Content AccessibilityGuidelines , and the needs of our community. To that end, all alterations to this documentation is checked with the following tools until they don't provide errors from an accessibility point of view: tota11y browser app; Google Chrome's Lighthouse , running in incognito mode; WAVE Web Accessibility Evaluation Tool. If you have any questions or feedback, you can join our community or reach out to our Community Lead . To ensure that contact info is up to date, check that you're reading the latest version of this page .","title":"Accessibility"},{"location":"acknowledgements/","text":"Acknowledgements Special thanks goes out to Tog\u00e1n Labs , APS Networks and Age of Peers for initiating this project with heart, soul and euro's. Eil\u00eds N\u00ed Fhlannag\u00e1in Katrina Prosise Niamh McNally John Toomey Sin\u00e9ad Redmond Sarah Wagner Kamal Bhatt Alexander Jeffries Andrew Heal Gawen Davey J\u00f6rg Peter Hahn Mike Duffy Rory MacDonald ben van 't ende","title":"Acknowedgements"},{"location":"acknowledgements/#acknowledgements","text":"Special thanks goes out to Tog\u00e1n Labs , APS Networks and Age of Peers for initiating this project with heart, soul and euro's. Eil\u00eds N\u00ed Fhlannag\u00e1in Katrina Prosise Niamh McNally John Toomey Sin\u00e9ad Redmond Sarah Wagner Kamal Bhatt Alexander Jeffries Andrew Heal Gawen Davey J\u00f6rg Peter Hahn Mike Duffy Rory MacDonald ben van 't ende","title":"Acknowledgements"},{"location":"adds-and-ends/","text":"Adds and Ends mion has additional features that are: use-case specific or niche, and don't need their own page very new experimental or not fully tested to be phased out of mion. You'll find the above and more, here at Adds and Ends . This is also a good time to remind you to check that you're reading the correct documentation version. While there's some overlap, you should read the release notes for full list of changes. Additional Features SDE With the introduction of our meta-mion-sde/meta-mion-barefoot layer, the necessary components for the Barefoot SDE are now available, enabling Tofino asics . For more information and on how to use it, checkout out the README Stratum Support in mion IMPORTANT NOTE: Stratum support is still considered experimental and largely untested. See the wiki for the most up-to-date information. The Stratum project provides an open-source SDN stack, with source code available via Stratum GitHub . mion Stratum recipes can be found in meta-mion . Note: the Stratum recipe simply downloads the .deb archive provided by the Stratum project and extracts the contents (binaries, libraries and scripts) to the correct location on the mion filesystem. Installing Stratum Stratum currently depends on the Barefoot SDE: Installing Barefoot SDE Add the following to the bottom of build/conf/local.conf : IMAGE_INSTALL += \" stratum\" Build and install an image as normal. Starting Stratum Stratum documentation The Stratum start-up script is /usr/bin/start-stratum.sh which can also be viewed in the Stratum repo . Development Image Development images can now be built with packagegroup-dev-mion . This will include tools for building and debugging on the target. QEMU As of mion 2021.03, qemux86-64 mion image with ONLPv1 support can be built. The primary purpose of this qemu image is to support testing, such as p-tests and OpenEmbedded runtime tests . Outside of internal testing purposes, the qemu image can give you a quick look at mion without the need to install it on bare-metal. UEFI Secure Boot UEFI Secure Boot has been partially implemented . See the above link to our dev wiki for more info. Trusted Platform Module (TPM) support in mion TPM support is provided by the meta-security/meta-tpm layer. For any system with a TPM2 chip, add tpm2 to MACHINE_FEATURES in meta-mion-bsp/<vendor>/conf/machine/<machine_name>.conf to include both the required kernel drivers, and a number of user-space TPM2 tools. The kernel module is automatically loaded on boot and will create a device node (usually /dev/tpm0 ) which provides access to the hardware. Newly Added Features ONIE Only Image Creation mion ONIE images can be built without the complication of the multiconfig by using the timely cronie.sh build script; this is now the default approaching for building mion. containerd and K3s Containers are implemented using containerd and K3s Ptest Images OpenEmbedded provides ptests, which in short are tests that are included with a package and have been configured via a recipe to summarize the results. Dent Initial Support for Dent has been added; currently only the delta-TN48M switch has Dent support. The mion dev wiki has up to date information on this subject. Newly added BSP layers Support for the Delta-TN48M has been added in meta-mion-bsp. Ends meta-mion-srunc The original container solution in mion, srunc, has been depricated. Support for srunc moved to meta-mion-unsupported . As a result, meta-mion was restructured. The main meta-mion layer is at the top level of the repo, rather than meta-mion/meta-mion . This change requires build/conf/bblayers.conf to match the new structure of the meta-mion repo, otherwise there will be a bitbake build error.","title":"Adds and Ends"},{"location":"adds-and-ends/#adds-and-ends","text":"mion has additional features that are: use-case specific or niche, and don't need their own page very new experimental or not fully tested to be phased out of mion. You'll find the above and more, here at Adds and Ends . This is also a good time to remind you to check that you're reading the correct documentation version. While there's some overlap, you should read the release notes for full list of changes.","title":"Adds and Ends"},{"location":"adds-and-ends/#additional-features","text":"","title":"Additional Features"},{"location":"adds-and-ends/#sde","text":"With the introduction of our meta-mion-sde/meta-mion-barefoot layer, the necessary components for the Barefoot SDE are now available, enabling Tofino asics . For more information and on how to use it, checkout out the README","title":"SDE"},{"location":"adds-and-ends/#stratum-support-in-mion","text":"IMPORTANT NOTE: Stratum support is still considered experimental and largely untested. See the wiki for the most up-to-date information. The Stratum project provides an open-source SDN stack, with source code available via Stratum GitHub . mion Stratum recipes can be found in meta-mion . Note: the Stratum recipe simply downloads the .deb archive provided by the Stratum project and extracts the contents (binaries, libraries and scripts) to the correct location on the mion filesystem.","title":"Stratum Support in mion"},{"location":"adds-and-ends/#installing-stratum","text":"Stratum currently depends on the Barefoot SDE: Installing Barefoot SDE Add the following to the bottom of build/conf/local.conf : IMAGE_INSTALL += \" stratum\" Build and install an image as normal.","title":"Installing Stratum"},{"location":"adds-and-ends/#starting-stratum","text":"Stratum documentation The Stratum start-up script is /usr/bin/start-stratum.sh which can also be viewed in the Stratum repo .","title":"Starting Stratum"},{"location":"adds-and-ends/#development-image","text":"Development images can now be built with packagegroup-dev-mion . This will include tools for building and debugging on the target.","title":"Development Image"},{"location":"adds-and-ends/#qemu","text":"As of mion 2021.03, qemux86-64 mion image with ONLPv1 support can be built. The primary purpose of this qemu image is to support testing, such as p-tests and OpenEmbedded runtime tests . Outside of internal testing purposes, the qemu image can give you a quick look at mion without the need to install it on bare-metal.","title":"QEMU"},{"location":"adds-and-ends/#uefi-secure-boot","text":"UEFI Secure Boot has been partially implemented . See the above link to our dev wiki for more info.","title":"UEFI Secure Boot"},{"location":"adds-and-ends/#trusted-platform-module-tpm-support-in-mion","text":"TPM support is provided by the meta-security/meta-tpm layer. For any system with a TPM2 chip, add tpm2 to MACHINE_FEATURES in meta-mion-bsp/<vendor>/conf/machine/<machine_name>.conf to include both the required kernel drivers, and a number of user-space TPM2 tools. The kernel module is automatically loaded on boot and will create a device node (usually /dev/tpm0 ) which provides access to the hardware.","title":"Trusted Platform Module (TPM) support in mion"},{"location":"adds-and-ends/#newly-added-features","text":"","title":"Newly Added Features"},{"location":"adds-and-ends/#onie-only-image-creation","text":"mion ONIE images can be built without the complication of the multiconfig by using the timely cronie.sh build script; this is now the default approaching for building mion.","title":"ONIE Only Image Creation"},{"location":"adds-and-ends/#containerd-and-k3s","text":"Containers are implemented using containerd and K3s","title":"containerd and K3s"},{"location":"adds-and-ends/#ptest-images","text":"OpenEmbedded provides ptests, which in short are tests that are included with a package and have been configured via a recipe to summarize the results.","title":"Ptest Images"},{"location":"adds-and-ends/#dent","text":"Initial Support for Dent has been added; currently only the delta-TN48M switch has Dent support. The mion dev wiki has up to date information on this subject.","title":"Dent"},{"location":"adds-and-ends/#newly-added-bsp-layers","text":"Support for the Delta-TN48M has been added in meta-mion-bsp.","title":"Newly added BSP layers"},{"location":"adds-and-ends/#ends","text":"","title":"Ends"},{"location":"adds-and-ends/#meta-mion-srunc","text":"The original container solution in mion, srunc, has been depricated. Support for srunc moved to meta-mion-unsupported . As a result, meta-mion was restructured. The main meta-mion layer is at the top level of the repo, rather than meta-mion/meta-mion . This change requires build/conf/bblayers.conf to match the new structure of the meta-mion repo, otherwise there will be a bitbake build error.","title":"meta-mion-srunc"},{"location":"getting-started/","text":"Getting Started Guide Pre-Requirements This documentation is for mion dunfell-2021.06 \"Dernish\" release If you are new to Yocto Project development, check out Overview and Concepts and the Quick Build guide to set up your build host and become familiar with the workflow. We provide a quick overview below. Already familiar and want to get started building mion? Then check out the mion README for a quick-start guide. Build Host Whether on a laptop or a high-powered build server, make sure that... You have 50 GB available Why so much when the resulting image is so tiny? Think of it as a small cake; Even if the end result can fit in a small box, you will still need a whole kitchen in order to bake it. git 1.8.3.1 or greater tar 1.28 or greater python 3.5.0 or greater gcc 5.0 or greater Ubuntu (16.04 -18.04) and Debian GNU/Linux (8.x-10.x) sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \\ build-essential chrpath socat cpio python3 python3-pip python3-pexpect \\ xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa \\ libsdl1.2-dev pylint3 xterm for Ubuntu, make sure that you are using bash rather than dash: sudo dpkg-reconfigure dash select No to use bash. Fedora (28-32) sudo dnf install gawk make wget tar bzip2 gzip python3 unzip perl patch \\ diffutils diffstat git cpp gcc gcc-c++ glibc-devel texinfo chrpath \\ ccache perl-Data-Dumper perl-Text-ParseWords perl-Thread-Queue perl-bignum\\ socat python3-pexpect findutils which file cpio python python3-pip xz \\ python3-GitPython python3-jinja2 SDL-devel xterm rpcgen CentOS(7.x) $ sudo yum install -y epel-release $ sudo yum makecache $ sudo yum install gawk make wget tar bzip2 gzip python3 unzip perl patch \\ diffutils diffstat git cpp gcc gcc-c++ glibc-devel texinfo chrpath socat \\ perl-Data-Dumper perl-Text-ParseWords perl-Thread-Queue python36-pip xz \\ which SDL-devel xterm $ sudo pip3 install GitPython jinja2 OpenSUSE Leap (15.1) sudo zypper install python gcc gcc-c++ git chrpath make wget python-xml \\ diffstat makeinfo python-curses patch socat python3 python3-curses tar \\ python3-pip python3-pexpect xz which python3-Jinja2 Mesa-libEGL1 \\ libSDL-devel xterm rpcgen $ sudo pip3 install GitPython The above requirements and build host packages are originally from Yocto Project Quick Build Copyright 2010-2020 Linux Foundation, under the Creative Commons Attribution-Share Alike 2.0 UK: England & Wales . We added the cake. Obtaining mion Sources You're almost ready! Now obtain the required mion bitbake layers. Use either the script mion/contrib/clone_mion_repos.sh , which clones all the main public mion repos with a single command, or manually as shown below. # To clone the submodules, `--recursive` is required git clone --recursive https://github.com/NetworkGradeLinux/mion.git cd mion # To obtain mion distro layer: git clone https://github.com/NetworkGradeLinux/meta-mion.git # Obtain the mion hardware layers git clone https://github.com/NetworkGradeLinux/meta-mion-bsp.git # Backports for upstream repos not currently in the LTS release git clone https://github.com/NetworkGradeLinux/meta-mion-backports.git mion provides the build script (cronie.sh) and configuration files in build/conf/ . The meta-mion layer provides mion distro configuration, and meta-mion-bsp is where support and configuration is found. Resources provides a detailed listing of all active mion repos. Basic Usage of Build Environment To begin, set up the build environment using the OpenEmbedded init script: source openembedded-core/oe-init-build-env This will place you in the build directory. Afterwords you can use our build script. Running ../cronie.sh without arguments displays basic usage. In general: ../cronie.sh -m <machine> <image> NOTE: The \\<image> argument must be provided last To do a \"dry run\" without running a build, add -e which emits what would have run if you ran this from bitbake. Note: The script can not always determine the vendor name, if you encounter that issue, or just want to be sure, you can use -v <VENDOR> to specify. Build Script Examples # Builds an ONLPV1 image onie image ../cronie.sh -m stordis-bf2556x-1t mion-onie-image-onlpv1 # Builds a QEMU with ONLPV1 ../cronie.sh -v qemu -m qemux86-64 mion-image-onlpv1 Image Creation Once you've gone through the pre-requirements, have your build host set up, and looked at the build script examples, you're ready to create an image yourself. When you run cronie.sh , bitbake gets called, first parsing all the recipes and making sure your local.conf and bblayers.conf looks good. Next, bitbake gets to work \"baking\" your image! Much like a multilayer cake, how fast it gets finished is going to depend on the quantity and complexities of the layers, and how reliable your baking setup is! While you enjoy a relaxing break, keep an eye on the screen for something like this: From the build directory, you'll find the finished images and related items such as the onie-installer in tmp-glibc/deploy/images/<VENDOR>-<MACHINE>/ Build Process Plan on the initial run to take some time, with following builds being much less. For a Linux VM with V Virtual CPUs and 32G RAM, a build will likely break down as follows: Fetching sources and setting up build environment : 5 minutes Building of the image : 3 hours Deploying mion via ONIE : 5 minutes per switch You're finally done with this guide? Now it's time for Installing mion ! If you've built the qemu image, from the build directory, runqemu tmp-glibc/deploy/images/qemux86-64/ runqemu may require setting up a tap interface. See meta-mion-qemu/README for more information.","title":"Getting Started Guide"},{"location":"getting-started/#getting-started-guide","text":"","title":"Getting Started Guide"},{"location":"getting-started/#pre-requirements","text":"This documentation is for mion dunfell-2021.06 \"Dernish\" release If you are new to Yocto Project development, check out Overview and Concepts and the Quick Build guide to set up your build host and become familiar with the workflow. We provide a quick overview below. Already familiar and want to get started building mion? Then check out the mion README for a quick-start guide.","title":"Pre-Requirements"},{"location":"getting-started/#build-host","text":"Whether on a laptop or a high-powered build server, make sure that... You have 50 GB available Why so much when the resulting image is so tiny? Think of it as a small cake; Even if the end result can fit in a small box, you will still need a whole kitchen in order to bake it. git 1.8.3.1 or greater tar 1.28 or greater python 3.5.0 or greater gcc 5.0 or greater","title":"Build Host"},{"location":"getting-started/#ubuntu-1604-1804-and-debian-gnulinux-8x-10x","text":"sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \\ build-essential chrpath socat cpio python3 python3-pip python3-pexpect \\ xz-utils debianutils iputils-ping python3-git python3-jinja2 libegl1-mesa \\ libsdl1.2-dev pylint3 xterm for Ubuntu, make sure that you are using bash rather than dash: sudo dpkg-reconfigure dash select No to use bash.","title":"Ubuntu (16.04 -18.04) and Debian GNU/Linux (8.x-10.x)"},{"location":"getting-started/#fedora-28-32","text":"sudo dnf install gawk make wget tar bzip2 gzip python3 unzip perl patch \\ diffutils diffstat git cpp gcc gcc-c++ glibc-devel texinfo chrpath \\ ccache perl-Data-Dumper perl-Text-ParseWords perl-Thread-Queue perl-bignum\\ socat python3-pexpect findutils which file cpio python python3-pip xz \\ python3-GitPython python3-jinja2 SDL-devel xterm rpcgen","title":"Fedora (28-32)"},{"location":"getting-started/#centos7x","text":"$ sudo yum install -y epel-release $ sudo yum makecache $ sudo yum install gawk make wget tar bzip2 gzip python3 unzip perl patch \\ diffutils diffstat git cpp gcc gcc-c++ glibc-devel texinfo chrpath socat \\ perl-Data-Dumper perl-Text-ParseWords perl-Thread-Queue python36-pip xz \\ which SDL-devel xterm $ sudo pip3 install GitPython jinja2","title":"CentOS(7.x)"},{"location":"getting-started/#opensuse-leap-151","text":"sudo zypper install python gcc gcc-c++ git chrpath make wget python-xml \\ diffstat makeinfo python-curses patch socat python3 python3-curses tar \\ python3-pip python3-pexpect xz which python3-Jinja2 Mesa-libEGL1 \\ libSDL-devel xterm rpcgen $ sudo pip3 install GitPython The above requirements and build host packages are originally from Yocto Project Quick Build Copyright 2010-2020 Linux Foundation, under the Creative Commons Attribution-Share Alike 2.0 UK: England & Wales . We added the cake.","title":"OpenSUSE Leap (15.1)"},{"location":"getting-started/#obtaining-mion-sources","text":"You're almost ready! Now obtain the required mion bitbake layers. Use either the script mion/contrib/clone_mion_repos.sh , which clones all the main public mion repos with a single command, or manually as shown below. # To clone the submodules, `--recursive` is required git clone --recursive https://github.com/NetworkGradeLinux/mion.git cd mion # To obtain mion distro layer: git clone https://github.com/NetworkGradeLinux/meta-mion.git # Obtain the mion hardware layers git clone https://github.com/NetworkGradeLinux/meta-mion-bsp.git # Backports for upstream repos not currently in the LTS release git clone https://github.com/NetworkGradeLinux/meta-mion-backports.git mion provides the build script (cronie.sh) and configuration files in build/conf/ . The meta-mion layer provides mion distro configuration, and meta-mion-bsp is where support and configuration is found. Resources provides a detailed listing of all active mion repos.","title":"Obtaining mion Sources"},{"location":"getting-started/#basic-usage-of-build-environment","text":"To begin, set up the build environment using the OpenEmbedded init script: source openembedded-core/oe-init-build-env This will place you in the build directory. Afterwords you can use our build script. Running ../cronie.sh without arguments displays basic usage. In general: ../cronie.sh -m <machine> <image> NOTE: The \\<image> argument must be provided last To do a \"dry run\" without running a build, add -e which emits what would have run if you ran this from bitbake. Note: The script can not always determine the vendor name, if you encounter that issue, or just want to be sure, you can use -v <VENDOR> to specify.","title":"Basic Usage of Build Environment"},{"location":"getting-started/#build-script-examples","text":"# Builds an ONLPV1 image onie image ../cronie.sh -m stordis-bf2556x-1t mion-onie-image-onlpv1 # Builds a QEMU with ONLPV1 ../cronie.sh -v qemu -m qemux86-64 mion-image-onlpv1","title":"Build Script Examples"},{"location":"getting-started/#image-creation","text":"Once you've gone through the pre-requirements, have your build host set up, and looked at the build script examples, you're ready to create an image yourself. When you run cronie.sh , bitbake gets called, first parsing all the recipes and making sure your local.conf and bblayers.conf looks good. Next, bitbake gets to work \"baking\" your image! Much like a multilayer cake, how fast it gets finished is going to depend on the quantity and complexities of the layers, and how reliable your baking setup is! While you enjoy a relaxing break, keep an eye on the screen for something like this: From the build directory, you'll find the finished images and related items such as the onie-installer in tmp-glibc/deploy/images/<VENDOR>-<MACHINE>/","title":"Image Creation"},{"location":"getting-started/#build-process","text":"Plan on the initial run to take some time, with following builds being much less. For a Linux VM with V Virtual CPUs and 32G RAM, a build will likely break down as follows: Fetching sources and setting up build environment : 5 minutes Building of the image : 3 hours Deploying mion via ONIE : 5 minutes per switch You're finally done with this guide? Now it's time for Installing mion ! If you've built the qemu image, from the build directory, runqemu tmp-glibc/deploy/images/qemux86-64/ runqemu may require setting up a tap interface. See meta-mion-qemu/README for more information.","title":"Build Process"},{"location":"glossary/","text":"Glossary Yocto Project, OpenEmbedded, and mion mion : Mini Infrastucture Operating System for Networks OpenEmbedded : Build framework used by the Yocto Project recipe : a set of instructions related to the fetching, building, or installation of a program within the Yocto Project Yocto Project : build system for custom embedded Linux distros Switch/Networking Terms and Projects i2c : Inter-IC, a simple device communications bus NOS : Network Operating System OCP : Open Compute Project ONF : Open Networking Foundation ONIE : Open Network Install Environment ONL : Open Network Linux ONLP : Open Network Linux Platform ONOS : Open Network Operating System OSI model: Open Systems Interconnection model P4 : programming language for network devices SAI : Switch Abstraction Interface SAL : Switch Abstraction Layer SDI : Serial Digital Interface SONiC : Software for Open Networking in the Cloud","title":"Glossary"},{"location":"glossary/#glossary","text":"","title":"Glossary"},{"location":"glossary/#yocto-project-openembedded-and-mion","text":"mion : Mini Infrastucture Operating System for Networks OpenEmbedded : Build framework used by the Yocto Project recipe : a set of instructions related to the fetching, building, or installation of a program within the Yocto Project Yocto Project : build system for custom embedded Linux distros","title":"Yocto Project, OpenEmbedded, and mion"},{"location":"glossary/#switchnetworking-terms-and-projects","text":"i2c : Inter-IC, a simple device communications bus NOS : Network Operating System OCP : Open Compute Project ONF : Open Networking Foundation ONIE : Open Network Install Environment ONL : Open Network Linux ONLP : Open Network Linux Platform ONOS : Open Network Operating System OSI model: Open Systems Interconnection model P4 : programming language for network devices SAI : Switch Abstraction Interface SAL : Switch Abstraction Layer SDI : Serial Digital Interface SONiC : Software for Open Networking in the Cloud","title":"Switch/Networking Terms and Projects"},{"location":"installing-mion/","text":"Installing mion After building mion, images for installation and related artifacts can be found in build/tmp-glibc/deploy/images/<MACHINE>/ . Files may differ depending on machine configuration. Image types ONIE compliant images ( <image_name>.bin ): install on a switch with ONIE installed Mender (DEPRECATED) Mender images are no longer included after \"Copeland\" . ONIE The ONIE image can be installed on the system using any ONIE supported installation method . We recommend that you use a TFTP server with a known hostname for installation however other options can be used. ONIE will be installed alongside other OS and will automatically update the boot options. ONIE images do not currently support the simple-runc container system","title":"Installing mion"},{"location":"installing-mion/#installing-mion","text":"After building mion, images for installation and related artifacts can be found in build/tmp-glibc/deploy/images/<MACHINE>/ . Files may differ depending on machine configuration.","title":"Installing mion"},{"location":"installing-mion/#image-types","text":"ONIE compliant images ( <image_name>.bin ): install on a switch with ONIE installed","title":"Image types"},{"location":"installing-mion/#mender-deprecated","text":"Mender images are no longer included after \"Copeland\" .","title":"Mender (DEPRECATED)"},{"location":"installing-mion/#onie","text":"The ONIE image can be installed on the system using any ONIE supported installation method . We recommend that you use a TFTP server with a known hostname for installation however other options can be used. ONIE will be installed alongside other OS and will automatically update the boot options. ONIE images do not currently support the simple-runc container system","title":"ONIE"},{"location":"mion-container-support/","text":"mion Container Support From mion release 2021.06 onwards, srunc is not supported. Containers are now utilized with containerd and the lightweight Kubernetes distribution K3s . containerd In keeping things simple, only containerd (and its dependencies) are added to the default image. To work with containerd, check that the service has been started: systemctl enable containerd systemctl start containerd There are two main ways of interacting with containerd: containerd-ctr ; a command-line tool that provides access to the core functionality containerd API ; this option may require installation of additional packages which are not included on the default image K3s Support K3s is not available in the dunfell branch of meta-virtualisation; you must clone meta-mion-backports to add support. Although K3s is backported and supported in mion, it is still considered experimental and untested. You will likely want to avoid using it in a production environment. Previous Container Support The previous solution for custom containers, srunc , is no longer supported in mion and has been move to meta-mion-unsupported . Previously, multiconfig and mc_build.sh were used along to build mion images with container support. Though no longer in use, they are being retained for potential repurposing in future releases.","title":"mion Container Support"},{"location":"mion-container-support/#mion-container-support","text":"From mion release 2021.06 onwards, srunc is not supported. Containers are now utilized with containerd and the lightweight Kubernetes distribution K3s .","title":"mion Container Support"},{"location":"mion-container-support/#containerd","text":"In keeping things simple, only containerd (and its dependencies) are added to the default image. To work with containerd, check that the service has been started: systemctl enable containerd systemctl start containerd There are two main ways of interacting with containerd: containerd-ctr ; a command-line tool that provides access to the core functionality containerd API ; this option may require installation of additional packages which are not included on the default image","title":"containerd"},{"location":"mion-container-support/#k3s-support","text":"K3s is not available in the dunfell branch of meta-virtualisation; you must clone meta-mion-backports to add support. Although K3s is backported and supported in mion, it is still considered experimental and untested. You will likely want to avoid using it in a production environment.","title":"K3s Support"},{"location":"mion-container-support/#previous-container-support","text":"The previous solution for custom containers, srunc , is no longer supported in mion and has been move to meta-mion-unsupported . Previously, multiconfig and mc_build.sh were used along to build mion images with container support. Though no longer in use, they are being retained for potential repurposing in future releases.","title":"Previous Container Support"},{"location":"resources/","text":"Resources mion mion developer wiki ; information regarding the internal development of mion and work in progress Network Grade Linux ; Parent project of mion mion Repos mion ; Base mion GitHub repository meta-mion ; GitHub repository for the base distro layer and image types. meta-mion-bsp ; Board/machine configurations and support layers meta-mion-sde ; Recipes needed to enable switch ASIC functionality meta-mion-backports ; Recipes backported from other Yocto project repos, such as K3s support meta-mion-unsupported ; layers which are not currently supported, such as meta-mion-simplerunc Yocto Project and OpenEmbedded The Yocto Project ; Build environment and system for custom embedded Linux Distributions. Maintains bitbake , OpenEmbedded Core, and Poky. BitBake User Manual ; basic information on: Recipes Configuration files Classes Layers Append files Yocto Documentation Yocto Project Overview and Concepts Manual OpenEmbedded ; Build framework for embedded Linux OpenEmbedded-Core ; Core support for machine architectures (x86-64, arm, etc) Layer ; A collection of recipes and configurations that can be used on top of OpenEmbedded Core. OpenEmbedded layer index","title":"Resources"},{"location":"resources/#resources","text":"","title":"Resources"},{"location":"resources/#mion","text":"mion developer wiki ; information regarding the internal development of mion and work in progress Network Grade Linux ; Parent project of mion","title":"mion"},{"location":"resources/#mion-repos","text":"mion ; Base mion GitHub repository meta-mion ; GitHub repository for the base distro layer and image types. meta-mion-bsp ; Board/machine configurations and support layers meta-mion-sde ; Recipes needed to enable switch ASIC functionality meta-mion-backports ; Recipes backported from other Yocto project repos, such as K3s support meta-mion-unsupported ; layers which are not currently supported, such as meta-mion-simplerunc","title":"mion Repos"},{"location":"resources/#yocto-project-and-openembedded","text":"The Yocto Project ; Build environment and system for custom embedded Linux Distributions. Maintains bitbake , OpenEmbedded Core, and Poky. BitBake User Manual ; basic information on: Recipes Configuration files Classes Layers Append files Yocto Documentation Yocto Project Overview and Concepts Manual OpenEmbedded ; Build framework for embedded Linux OpenEmbedded-Core ; Core support for machine architectures (x86-64, arm, etc) Layer ; A collection of recipes and configurations that can be used on top of OpenEmbedded Core. OpenEmbedded layer index","title":"Yocto Project and OpenEmbedded"},{"location":"sorex-minutus/","text":"A tale of the tinniest little pygmy shew Part II: And the search continues In March, she was seen leaving Copeland, heading west. In late June, she was spotted on Dernish Island. An analysis of our pygmy shew's behavior indicates that she will likely be heading a short distance North, likely towards Eighter Island. We will be sending our top engineers and community volunteers there, in hope that we will be reunited with our mascot. Once again, please contact us in our random channel on slack if you have spotted her or wish to volunteer. Part I: The Search for our Mascot You see, in all the commotion of preparing this release, we seem to have misplaced our mascot, and even forgot to give her a name. If you happen to run across an Irish Pygmy Shew that you think maybe her, please take an original photo, drawing, or, best of all, a vector based image, and submit it to us in our # random NGL Slack channel. We do hope she shows up before the next release, she's important for project morale!","title":"A tale of the tinniest little pygmy shew"},{"location":"sorex-minutus/#a-tale-of-the-tinniest-little-pygmy-shew","text":"","title":"A tale of the tinniest little pygmy shew"},{"location":"sorex-minutus/#part-ii-and-the-search-continues","text":"In March, she was seen leaving Copeland, heading west. In late June, she was spotted on Dernish Island. An analysis of our pygmy shew's behavior indicates that she will likely be heading a short distance North, likely towards Eighter Island. We will be sending our top engineers and community volunteers there, in hope that we will be reunited with our mascot. Once again, please contact us in our random channel on slack if you have spotted her or wish to volunteer.","title":"Part II: And the search continues"},{"location":"sorex-minutus/#part-i-the-search-for-our-mascot","text":"You see, in all the commotion of preparing this release, we seem to have misplaced our mascot, and even forgot to give her a name. If you happen to run across an Irish Pygmy Shew that you think maybe her, please take an original photo, drawing, or, best of all, a vector based image, and submit it to us in our # random NGL Slack channel. We do hope she shows up before the next release, she's important for project morale!","title":"Part I: The Search for our Mascot"},{"location":"supported-switches/","text":"mion supported switches mion 2021.06 Dernish supports the following switches. To add a new switch, we have a mion porting guide . Vendor Model Arch ASIC Config First Release APS (Stordis) BF2556X-1T x86_64 BF Tofino 1 1U 48x25GB + 8x100GB 2020.12 APS (Stordis) BF6064X-T x86_64 BF Tofino 1 2U 64x40/50/100Gb 2020.12 Edgecore ASGvOLT-64 x86_64 Broadcom Qumran-AX 2U 64xGPON + 2x100GB 2020.12 Edgecore Wedge100BF-32X x86_64 BF Tofino 1 1U 32x100Gb 2020.12 Edgecore Wedge100BF-65X x86_64 BF Tofino 1 2U 65x100Gb 2020.12 Delta tn48m arm64 -- 1U 32x10Gb 2021.06 QEMU qemux86-64 x86_64 -- -- 2021.03","title":"Supported Switches"},{"location":"supported-switches/#mion-supported-switches","text":"mion 2021.06 Dernish supports the following switches. To add a new switch, we have a mion porting guide . Vendor Model Arch ASIC Config First Release APS (Stordis) BF2556X-1T x86_64 BF Tofino 1 1U 48x25GB + 8x100GB 2020.12 APS (Stordis) BF6064X-T x86_64 BF Tofino 1 2U 64x40/50/100Gb 2020.12 Edgecore ASGvOLT-64 x86_64 Broadcom Qumran-AX 2U 64xGPON + 2x100GB 2020.12 Edgecore Wedge100BF-32X x86_64 BF Tofino 1 1U 32x100Gb 2020.12 Edgecore Wedge100BF-65X x86_64 BF Tofino 1 2U 65x100Gb 2020.12 Delta tn48m arm64 -- 1U 32x10Gb 2021.06 QEMU qemux86-64 x86_64 -- -- 2021.03","title":"mion supported switches"},{"location":"community/Coc-interpretation/","text":"Interpretation of the Code of Conduct Taking inspiration from the Linux Kernel Contributor Code of Conduct Interpretation , we are providing our interpretation of the aforementioned Code of Conduct which has been adopted for use for mion; this allows for adaptation specific to our project. As Network Grade Linux grows and changes over time, so may our interpretation. Expect this document to be subject to change. Changes to our interpretation, if and when they do occur, will be announced through the appropriate community communication channels, and a changelog will be attached at the end of this document. Standards While the Code of Conduct provides examples of behavior that contributes to a positive environment, we acknowledge that these are only examples, and that they serve as a point of reference; that is, the behavior we expect in our community goes beyond the examples. We also believe that our standards should not only avoid being disrespectful or harmful, but should work towards the goal of actively welcoming others into the community. In other words, we strive to create an environment where individuals know that they will be respected and welcomed before they joined and not only after they have done so. In line with our standards is our style-guide , which we expect contributors to be familiar with, and to follow our guidelines on Inclusivity and Supporting Diversity. Responsibilities Maintainers Definition of Maintainers When referenced in the Code of Conduct, maintainer applies to those responsible for the approval of merging branches, acceptance of patches, and general maintenance of any repository belonging to Network Grade Linux. The term also extends to the individual or individuals who monitor general communication channels such as, but not limited to any Slack channels not specific to a given repository. This role belongs to the project team contact or contacts provided under the Enforcement section of our Code of Conduct. The maintainers are generally listed within each repository README.md . Code of Conduct Responsibilities for Maintainers Our maintainers are expected to model the Code of Conduct, and to address unacceptable behavior. Responses to possible violations are expected to be performed in a timely fashion, while also taking the time to communicate with the project's leaders to ensure that any actions taken are done so in a thoughtful mannor which represents our values. Scope The scope extends to accounts which submit patches and pull requests, such as on GitHub. Enforcement It is preferable that reports are submitted to the project team lead mentioned under the Code of Conduct. That said, it is also expected that all maintainers and project leadership will monitor the community, actively addressing situations by discussing possible violation with leadership, rather than only taking action when a report is made.","title":"CoC Interpretation"},{"location":"community/Coc-interpretation/#interpretation-of-the-code-of-conduct","text":"Taking inspiration from the Linux Kernel Contributor Code of Conduct Interpretation , we are providing our interpretation of the aforementioned Code of Conduct which has been adopted for use for mion; this allows for adaptation specific to our project. As Network Grade Linux grows and changes over time, so may our interpretation. Expect this document to be subject to change. Changes to our interpretation, if and when they do occur, will be announced through the appropriate community communication channels, and a changelog will be attached at the end of this document.","title":"Interpretation of the Code of Conduct"},{"location":"community/Coc-interpretation/#standards","text":"While the Code of Conduct provides examples of behavior that contributes to a positive environment, we acknowledge that these are only examples, and that they serve as a point of reference; that is, the behavior we expect in our community goes beyond the examples. We also believe that our standards should not only avoid being disrespectful or harmful, but should work towards the goal of actively welcoming others into the community. In other words, we strive to create an environment where individuals know that they will be respected and welcomed before they joined and not only after they have done so. In line with our standards is our style-guide , which we expect contributors to be familiar with, and to follow our guidelines on Inclusivity and Supporting Diversity.","title":"Standards"},{"location":"community/Coc-interpretation/#responsibilities","text":"","title":"Responsibilities"},{"location":"community/Coc-interpretation/#maintainers","text":"","title":"Maintainers"},{"location":"community/Coc-interpretation/#definition-of-maintainers","text":"When referenced in the Code of Conduct, maintainer applies to those responsible for the approval of merging branches, acceptance of patches, and general maintenance of any repository belonging to Network Grade Linux. The term also extends to the individual or individuals who monitor general communication channels such as, but not limited to any Slack channels not specific to a given repository. This role belongs to the project team contact or contacts provided under the Enforcement section of our Code of Conduct. The maintainers are generally listed within each repository README.md .","title":"Definition of Maintainers"},{"location":"community/Coc-interpretation/#code-of-conduct-responsibilities-for-maintainers","text":"Our maintainers are expected to model the Code of Conduct, and to address unacceptable behavior. Responses to possible violations are expected to be performed in a timely fashion, while also taking the time to communicate with the project's leaders to ensure that any actions taken are done so in a thoughtful mannor which represents our values.","title":"Code of Conduct Responsibilities for Maintainers"},{"location":"community/Coc-interpretation/#scope","text":"The scope extends to accounts which submit patches and pull requests, such as on GitHub.","title":"Scope"},{"location":"community/Coc-interpretation/#enforcement","text":"It is preferable that reports are submitted to the project team lead mentioned under the Code of Conduct. That said, it is also expected that all maintainers and project leadership will monitor the community, actively addressing situations by discussing possible violation with leadership, rather than only taking action when a report is made.","title":"Enforcement"},{"location":"community/Community/","text":"The Network Grade Linux Community Welcome to Network Grade Linux/mion! Community is where open source lives and thrives. Whether you have questions about using mion or code to contribute, below you'll find useful information on how to participate and become a member of our community! First, please read and agree to our Code of Conduct . How to Participate There are a number of ways to participate, from contributing code and documentation to communicating with others in the community. Each repository may have different requirements for contributing, in which case it can be found in the CONTRIBUTING.md in the repository's root. For an overview of how to contribute, including patch guidelines and git workflow, see mion/CONTRIBUTING.md . We also have our developer wiki with meeting minutes, development process, and other information for those who are getting involved with contributing. Getting in Touch The best way to get in touch is Slack , or you can attend one of our public meetings. For anything related to documentation you can email our documentation maintainer . Slack All are welcome to stop by, introduce themselves, and say hi to us over on Slack! Here's our current Slack channels, and what each are used for: general: news, announcements and project wide discussions, good place to introduce yourself to everyone! gh-notify: reserved for automated GitHub updates on CI builds, issue statuses, and pull requests network-grade-linux: mostly technical discussions, this is where you should ask questions regarding mion random: this is a great place to say hi and simply hangout and chat While not required, we suggest filling out your slack profile with what you do, and adding where you work in parentheses in your display name. Keep in mind that many of us are in different time zones, so replies may take some time. Public Meetings Public meetings are subject to changes, it is always best to check on our Slack #general channel for updates. Meetings are done over Zoom. NGL Fortnightly Bug Triage : Every other Wednesday 1600-1700 UTC (04:00-05:00 PM) NGL Fortnightly Engineering Sync Documentation meeting : Every other Thursday starting on 2021-01-14 at 13:15-13:45 UTC (13:15-13:45 PM)","title":"About our Community"},{"location":"community/Community/#the-network-grade-linux-community","text":"Welcome to Network Grade Linux/mion! Community is where open source lives and thrives. Whether you have questions about using mion or code to contribute, below you'll find useful information on how to participate and become a member of our community! First, please read and agree to our Code of Conduct .","title":"The Network Grade Linux Community"},{"location":"community/Community/#how-to-participate","text":"There are a number of ways to participate, from contributing code and documentation to communicating with others in the community. Each repository may have different requirements for contributing, in which case it can be found in the CONTRIBUTING.md in the repository's root. For an overview of how to contribute, including patch guidelines and git workflow, see mion/CONTRIBUTING.md . We also have our developer wiki with meeting minutes, development process, and other information for those who are getting involved with contributing.","title":"How to Participate"},{"location":"community/Community/#getting-in-touch","text":"The best way to get in touch is Slack , or you can attend one of our public meetings. For anything related to documentation you can email our documentation maintainer .","title":"Getting in Touch"},{"location":"community/Community/#slack","text":"All are welcome to stop by, introduce themselves, and say hi to us over on Slack! Here's our current Slack channels, and what each are used for: general: news, announcements and project wide discussions, good place to introduce yourself to everyone! gh-notify: reserved for automated GitHub updates on CI builds, issue statuses, and pull requests network-grade-linux: mostly technical discussions, this is where you should ask questions regarding mion random: this is a great place to say hi and simply hangout and chat While not required, we suggest filling out your slack profile with what you do, and adding where you work in parentheses in your display name. Keep in mind that many of us are in different time zones, so replies may take some time.","title":"Slack"},{"location":"community/Community/#public-meetings","text":"Public meetings are subject to changes, it is always best to check on our Slack #general channel for updates. Meetings are done over Zoom. NGL Fortnightly Bug Triage : Every other Wednesday 1600-1700 UTC (04:00-05:00 PM) NGL Fortnightly Engineering Sync Documentation meeting : Every other Thursday starting on 2021-01-14 at 13:15-13:45 UTC (13:15-13:45 PM)","title":"Public Meetings"},{"location":"community/code-of-conduct/","text":"Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting and giving constructive criticism Focusing on what is best for the community Showing compassion and kindness towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at ben@ageofpeers.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq Interpretation See our Interpretation of the Code of Conduct: CoC-interpretation","title":"Code of Conduct"},{"location":"community/code-of-conduct/#code-of-conduct","text":"","title":"Code of Conduct"},{"location":"community/code-of-conduct/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"community/code-of-conduct/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting and giving constructive criticism Focusing on what is best for the community Showing compassion and kindness towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"community/code-of-conduct/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"community/code-of-conduct/#scope","text":"This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"community/code-of-conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at ben@ageofpeers.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"community/code-of-conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"community/code-of-conduct/#interpretation","text":"See our Interpretation of the Code of Conduct: CoC-interpretation","title":"Interpretation"},{"location":"release_notes/2021-03/","text":"mion dunfell-2021.03 \"Copeland\" The Network Grade Linux project is very proud to present the third release of mion, code-named \"Copeland\". This version contains support for the Barefoot SDE, the replacement of Busybox with full applications, development images as well as extensive improvements to the documentation and numerous bug fixes and other minor improvements. Main features and improvements New BSP: QEMU -- for development and automated ptest/qa testing Barefoot SDE (meta-mion-sde) -- Initial reference implementation for the Barefoot SDE 9.3 Initial support for UEFI Secure Boot on APSN switches (Secure ONIE + signed kernel) Busybox replaced with full suite of Linux utilities Docs migrated to MkDocs and versioned per release Extensive documentation cleanup, addition of community landing page, addition of developer focused wiki Added support for development images with packagegroup-dev-mion (development/debugging tools) Notable bug fixes onlpd service not working (meta-mion#67) BF2556X-1T platform scripts added to image (meta-mion-bsp#37) build failures fixed when using sstate_cache but empty tmp_glibc (meta-mion#57) BF2556X-1T onlps error when reading from SFP port (meta-mion-bsp#31) Errata of known issues GRUB menu install failure with old version of ONIE (meta-mion#63) NFSD fails to start due to missing kernel module (meta-mion#87) Kernel panic on shutdown with irq_debug.ko (meta-mion-bsp#27) Intermittent build failures on BF6064X-T (meta-mion-bsp#30) Cannot Access BfRt Python CLI Through bfshell (meta-mion-sde#12) BF2556X-1T - Issue with port state on Barefoot SDE (meta-mion-sde#18) https://docs.mion.io fails multiple accessibility checks (mion-docs#183) bf_python is an incomplete build/install and fails on import __struct (meta-mion-sde#19) Git Log *** mion *** - be5738d Update submodules before 2021.03 release - 81a8e70 Update submodules and add meta-intel to bblayers - 74e2cbc Updating submodules. - c0f0e1a bblayers.conf: remove meta-mion-sde for now - 0f24bf7 Update submodules for meta-mion-sde - 0cea8c1 local.conf: Add Secure Boot options - 5b4c242 Add meta-intel for secure boot signing - 31e5867 mion: Updating submodules. - 95311ee Continue flag `-k` should be an optional flag and not run all the time. - e3c9d83 Add continue flag to bitbake builds - adfbab5 Updating core OS submodules. - b2aed48 Add information for running bitbake outside of mc_build.sh - 1ea4c00 Add \"new\" label to all new issues - 6abd231 Add bug report and feature request templates *** meta-mion *** - da58019 mion.conf: Bump DISTRO_VERSION - a0a01d9 onlpv1: Fix onlpdump service - a4ade76 os-release.bbappend: MION_BUILD_ID does not exist - e5094d4 Update packages in core and dev - ae69c43 Convert dev image .inc to packagegroup - 8d0d974 mion images: Move from IMAGE_INSTALL += - 6da58a4 Initial dev image .inc file - 7871ddd mion-image-core.inc: Remove and replace busybox - 64824c9 Revert the onie tools to the provided examples - 4eafa72 Add dev-pkgs to fix onlpdump.py libs linking issue - 726c3f8 mion.conf: Clean up DISTRO_FEATURES in mion.conf - 8ed961d Initial support for UEFI Secure Boot - d2867db install.sh: Use max available disk space by default - 6f644bc Update the sources in the README - 0a1bae0 mion.conf: change DISTRO_VERSION to snapshot *** meta-mion-bsp *** - 95aa97d meta-mion-stordis/conf/machine/*: Add platform service - 8097f21 onlpv*.bbappend: Switch remotes - 09606ee Add support for qemu - 8ede604 Revert APS Networks remotes - ef2bb83 meta-mion-stordis: Update onlpv* remotes - e8965de Remove Fetcher SSH Requirement *** meta-mion-sde *** - d82a5bf README: Add actual details and documentation for the barefoot sde - 17e24f2 meta-mion-barefoot: Add SPDX License identifiers - 93f4fde barefoot-bsp_9.3.0: Cleanup unclean packaging - 95ff95d bf-drivers: Build using barefoot runtime - 4f2cd96 bf-drivers_9.3.0.bb: disable thrift and install roms - f33d9dc Add P4 Examples to Image - 4fc41cc barefoot-bsp_9.3.0: prefix to STAGING DIR - 7e2f450 bf-utils: require libedit and remove third party libedit files - fc362fd barefoot-bsp_9.3.0: Fix host contamination - 55fe24d barefoot-bsp_9.3.0.bb: Add kernel module - 65f2086 barefoot-bsp_9.3.0.bb: Add gettext - 82cbfbb pi: more branch renaming - ab919ad packagegroup-sde-barefoot: Add the BSP recipe - 1282db9 README: Add intial README - e049155 Merge pull request #2 from NetworkGradeLinux/dunfell-next - 3c85784 mv-pipe-config: Remove recipe - a71c4da pi_0.0.1.bb: Switch branch name - 7a33652 barefoot-bsp: Add a working bsp recipe (formerly bf2556-1t-bsp) - 07abf42 meta-mion-barefoot: bump to 9.3.0 - 5c4f375 meta-mion-sde/meta-mion-barefoot: Initial commit *** mion-docs *** - 1506cd8 Update home page - 963ff21 Add supported switch table - 980ffbb Sync changes made in gh-pages - 8ec9fed Update CONTRIBUTING.md - 00bbbab Remove outdated info - ac206ad Merge branch 'dunfell' into kprosise/mkdocs - 1d61a7e Resolve merge conflicts - d4323c4 Scrub down mion docs - c3efa76 Replace Jekyll with mkdocs - 8bece85 Convert mion-docs to mkdocs - 338419e Replace Jekyll with mkdocs - 46ac520 Missed a line, changed SSH to HTTPS - a36301d Changed clone URI to use https - 38adc28 Convert mion-docs to mkdocs - f75f8fe Remove _meta/ folder and contents - 8a4b08d Clarify use of needed variables to run bitbake - 5e35801 Move Community.md out of drafts into main docs - ddaacbe Change doc homepage to serve as project entry point - 6854c94 Add to how to run bitbake commands directly in docs/getting-started.md - f28761f Update index.md - 4ca2ba8 Add recommendation of introducing folks - c2bb0f8 Add draft for new documentation homepage Signed-off-by: Katrina Prosise <igorina@toganlabs.com> - d843e95 Add draft version of community page in _drafts for review - 220cd8f Add link to the oe styleguide for recipes","title":2021.03},{"location":"release_notes/2021-03/#mion-dunfell-202103-copeland","text":"The Network Grade Linux project is very proud to present the third release of mion, code-named \"Copeland\". This version contains support for the Barefoot SDE, the replacement of Busybox with full applications, development images as well as extensive improvements to the documentation and numerous bug fixes and other minor improvements.","title":"mion dunfell-2021.03 \"Copeland\""},{"location":"release_notes/2021-03/#main-features-and-improvements","text":"New BSP: QEMU -- for development and automated ptest/qa testing Barefoot SDE (meta-mion-sde) -- Initial reference implementation for the Barefoot SDE 9.3 Initial support for UEFI Secure Boot on APSN switches (Secure ONIE + signed kernel) Busybox replaced with full suite of Linux utilities Docs migrated to MkDocs and versioned per release Extensive documentation cleanup, addition of community landing page, addition of developer focused wiki Added support for development images with packagegroup-dev-mion (development/debugging tools)","title":"Main features and improvements"},{"location":"release_notes/2021-03/#notable-bug-fixes","text":"onlpd service not working (meta-mion#67) BF2556X-1T platform scripts added to image (meta-mion-bsp#37) build failures fixed when using sstate_cache but empty tmp_glibc (meta-mion#57) BF2556X-1T onlps error when reading from SFP port (meta-mion-bsp#31)","title":"Notable bug fixes"},{"location":"release_notes/2021-03/#errata-of-known-issues","text":"GRUB menu install failure with old version of ONIE (meta-mion#63) NFSD fails to start due to missing kernel module (meta-mion#87) Kernel panic on shutdown with irq_debug.ko (meta-mion-bsp#27) Intermittent build failures on BF6064X-T (meta-mion-bsp#30) Cannot Access BfRt Python CLI Through bfshell (meta-mion-sde#12) BF2556X-1T - Issue with port state on Barefoot SDE (meta-mion-sde#18) https://docs.mion.io fails multiple accessibility checks (mion-docs#183) bf_python is an incomplete build/install and fails on import __struct (meta-mion-sde#19)","title":"Errata of known issues"},{"location":"release_notes/2021-03/#git-log","text":"*** mion *** - be5738d Update submodules before 2021.03 release - 81a8e70 Update submodules and add meta-intel to bblayers - 74e2cbc Updating submodules. - c0f0e1a bblayers.conf: remove meta-mion-sde for now - 0f24bf7 Update submodules for meta-mion-sde - 0cea8c1 local.conf: Add Secure Boot options - 5b4c242 Add meta-intel for secure boot signing - 31e5867 mion: Updating submodules. - 95311ee Continue flag `-k` should be an optional flag and not run all the time. - e3c9d83 Add continue flag to bitbake builds - adfbab5 Updating core OS submodules. - b2aed48 Add information for running bitbake outside of mc_build.sh - 1ea4c00 Add \"new\" label to all new issues - 6abd231 Add bug report and feature request templates *** meta-mion *** - da58019 mion.conf: Bump DISTRO_VERSION - a0a01d9 onlpv1: Fix onlpdump service - a4ade76 os-release.bbappend: MION_BUILD_ID does not exist - e5094d4 Update packages in core and dev - ae69c43 Convert dev image .inc to packagegroup - 8d0d974 mion images: Move from IMAGE_INSTALL += - 6da58a4 Initial dev image .inc file - 7871ddd mion-image-core.inc: Remove and replace busybox - 64824c9 Revert the onie tools to the provided examples - 4eafa72 Add dev-pkgs to fix onlpdump.py libs linking issue - 726c3f8 mion.conf: Clean up DISTRO_FEATURES in mion.conf - 8ed961d Initial support for UEFI Secure Boot - d2867db install.sh: Use max available disk space by default - 6f644bc Update the sources in the README - 0a1bae0 mion.conf: change DISTRO_VERSION to snapshot *** meta-mion-bsp *** - 95aa97d meta-mion-stordis/conf/machine/*: Add platform service - 8097f21 onlpv*.bbappend: Switch remotes - 09606ee Add support for qemu - 8ede604 Revert APS Networks remotes - ef2bb83 meta-mion-stordis: Update onlpv* remotes - e8965de Remove Fetcher SSH Requirement *** meta-mion-sde *** - d82a5bf README: Add actual details and documentation for the barefoot sde - 17e24f2 meta-mion-barefoot: Add SPDX License identifiers - 93f4fde barefoot-bsp_9.3.0: Cleanup unclean packaging - 95ff95d bf-drivers: Build using barefoot runtime - 4f2cd96 bf-drivers_9.3.0.bb: disable thrift and install roms - f33d9dc Add P4 Examples to Image - 4fc41cc barefoot-bsp_9.3.0: prefix to STAGING DIR - 7e2f450 bf-utils: require libedit and remove third party libedit files - fc362fd barefoot-bsp_9.3.0: Fix host contamination - 55fe24d barefoot-bsp_9.3.0.bb: Add kernel module - 65f2086 barefoot-bsp_9.3.0.bb: Add gettext - 82cbfbb pi: more branch renaming - ab919ad packagegroup-sde-barefoot: Add the BSP recipe - 1282db9 README: Add intial README - e049155 Merge pull request #2 from NetworkGradeLinux/dunfell-next - 3c85784 mv-pipe-config: Remove recipe - a71c4da pi_0.0.1.bb: Switch branch name - 7a33652 barefoot-bsp: Add a working bsp recipe (formerly bf2556-1t-bsp) - 07abf42 meta-mion-barefoot: bump to 9.3.0 - 5c4f375 meta-mion-sde/meta-mion-barefoot: Initial commit *** mion-docs *** - 1506cd8 Update home page - 963ff21 Add supported switch table - 980ffbb Sync changes made in gh-pages - 8ec9fed Update CONTRIBUTING.md - 00bbbab Remove outdated info - ac206ad Merge branch 'dunfell' into kprosise/mkdocs - 1d61a7e Resolve merge conflicts - d4323c4 Scrub down mion docs - c3efa76 Replace Jekyll with mkdocs - 8bece85 Convert mion-docs to mkdocs - 338419e Replace Jekyll with mkdocs - 46ac520 Missed a line, changed SSH to HTTPS - a36301d Changed clone URI to use https - 38adc28 Convert mion-docs to mkdocs - f75f8fe Remove _meta/ folder and contents - 8a4b08d Clarify use of needed variables to run bitbake - 5e35801 Move Community.md out of drafts into main docs - ddaacbe Change doc homepage to serve as project entry point - 6854c94 Add to how to run bitbake commands directly in docs/getting-started.md - f28761f Update index.md - 4ca2ba8 Add recommendation of introducing folks - c2bb0f8 Add draft for new documentation homepage Signed-off-by: Katrina Prosise <igorina@toganlabs.com> - d843e95 Add draft version of community page in _drafts for review - 220cd8f Add link to the oe styleguide for recipes","title":"Git Log"},{"location":"release_notes/2021-06/","text":"mion dunfell-2021.06 \"Dernish\" Release Notes The Network Grade Linux project is very proud to present the fourth release of mion, code-named \"Dernish\". Notable features include support for the Barefoot SDE version 9.4.0, initial support for the Stratum and Dent projects, package management and feeds as well as a new container strategy using containerd. Main features and improvements New BSP: Delta TN48M - backported 5.10 kernel and switchdev support Barefoot SDE version 9.4.0 Initial support for Stratum Initial support for the Dent project (on TN-48M) Lots of documentation and wiki improvements ptest image type for package tests and a defined test plan Defined update strategy, initial package management work and package feeds Reworking of container setup using containerd (and removal of srunc) K3s backported to dunfell in meta-mion-backports Numerous bug fixes and minor improvements Notable bug fixes Boot issue on APS BF6064 (meta-mion-bsp#47) bf_switchd Takes Longer to launch on mion (meta-mion-sde#13) Errata of known issues Host contamination in ONLPv1 (mion#139) GRUB menu install failure with old version of ONIE (meta-mion#63) NFSD fails to start due to missing kernel module (meta-mion#87) Kernel panic on shutdown with irq_debug.ko (meta-mion-bsp#27) Relink error libm when starting onlpd on BF6064X-T (meta-mion-bsp#58) SMBUS Get Fail (meta-mion-bsp#70) Cannot Access BfRt Python CLI Through bfshell (meta-mion-sde#12) Issue with port state on Barefoot SDE with BF2556X-1T (meta-mion-sde#18) Possible i2c Enumeration Race on BF2556X-1T (meta-mion-sde#20) Error Starting SDE - Hugepages (meta-mion-sde#29) https://docs.mion.io fails multiple accessibility checks (mion-docs#183) Breaking changes meta-mion has been moved to the top of its repo and is no longer shared with other layers meta-mion-backports layer is required by default mc_build.sh has been deprecated in favor of a simpler build script - cronie.sh Git Log *** mion *** - 445d518 Remove stratum repo from update script - 2f0facf Note build-script argument order in README.md - 04acfad [2021-23] Update submodules - 30c4ce8 repo_dispatch.yml: Fix host name - 3c1e0a5 Add contrib/ dir for community scripts - b19fa3d README.md: Update README to use new build script - 11480cc local.conf: Set default package feed URI - 62f6eb9 Add ptest requirement to local.conf - ca4954f Update repo dispatch - 1c114fd [2021-21] Update submodules - 662dc19 cronie.sh: fix permissions +x - d19781a cronie.sh: simple ONIE-only build script - 5ab450c bblayers.conf: add meta-mion-backports - 11fed5d onie-only-build.sh: Add a simple build script. - 7c9ce91 bblayers.conf: Remove meta-simplerunc. - 430c4b5 [2021-20] Update Submodules. - e60dc00 [2021-19] Update Submodules. - 78b60b3 [2021-17] Update submodules - 78e5994 Remove mender from README.md - 58ca131 Remove meta-mender submodule and mender configs - 53e860a Add pull request template *** meta-mion *** - fc6372a mion.conf: Bumping to Dernish release - 2243436 Add Stratum recipe and config - cfbe8db mion-image-core.inc: Add smarttools to default image - 7d799d9 dent_1.0.bb: Add ifupdown2 as a DEPENDS - ec156ab ifupdown2: Needed for DENT - 291c6c2 mion-onie-image.inc: Require kernel to be deployed - ac98423 mion-onie-image.inc: Ensure no wic image and correct no do_unpack. - a7ea5b6 layer.conf: change bbpriority - 101a4c7 mion-onie-image.inc: Fix bash failures/set no sstate - 51595b9 mion.conf: append IMAGE_FSTYPES - 66c8694 mion-onie-image.inc: Don't do this as IMAGE_POSTPROCESS - 1a0b911 Revert \"Allow additional image fstypes\" - ec89dc9 Allow additional image fstypes - aded7f1 mion.conf: Split distro version into vars - 4958e2b Update repo dispatch - f3561c0 mion-image-core.inc: Add package-management - 2cd9305 Update runner for repo_dispatch - 8a5501c Initial DENT: Support DENT - a7c543e mion.conf: Add ability to build onie images without mc - ede7018 mion-image-core.inc: Add containerd and runc to default - e9dec95 meta-mion: Restructure of meta-mion - 0286d7b meta-mion-simplerunc: Moved to meta-mion-unsupported - a52f83f recipes-core/packagegroups: move packagegroups-* - 7c45564 os-release.bbappend: Remove MACHINE - 9ed6703 onlpdump.service: Reduce timeout on onlpd shutdown - 48f91f2 Add p-test image type - 03591c3 Add aliases script to /etc/profile.d/ - 2bd258b Add pull request template - aa69465 mion-image-core.inc: move dmidecode back from dev - 5f9fbfa mion.conf: Switch to +snapshot DISTRO_VERSION *** meta-mion-backports *** - 2ecd0c5 Apply styleguide rules to README.md - bb35719 Update repo dispatch - e79b7e2 linux-yocto_5.10.bb: Backport from hardknott of 5.10 kernel - b7989a4 Add repo dispatch and fix README file extension - 74c4338 Add k3s and deps from meta-virtualisation *** meta-mion-bsp *** - 55d1d35 barefoot-bsp_9.4.0.bbappend: Wrong path for 2556 patch - 8e838e3 barefoot-bsp_9.4.0.bbappend: put in APSN specific extract - dc7b992 Update qemu bsp info - 42f569a barefoot-bsp_9.4.0.bbappend: appends before machine - c2fec45 Add host include patch bf6064x-t - b76feae barefoot-bsp_9.4.0: Add bbappend for 6064 - 2d35d80 Remove redundant clock source set from init script - 5a7b59b delta-tn48m: Fix kernel and initramfs generation - 152f161 qemu-qemux86-64.conf: Append IMAGE_FSTYPES - 2f778c8 Fix BF6064X-T Platform Initialisation - a81d551 delta-tn48m.conf: Add additional kernel variables - 39a70e4 qemu-qemux86-64.conf: Add ext4 image type. - 7f6ee4d Update repo dispatch - b3be795 0005-fsl-ls1043a-rdb-sdk.patch: Readd patch - f646a08 linux-yocto_5.10.bbappend: Remove unused patches - 1f490c9 meta-mion-delta: initial support for the tn48m - e482692 Add pull request template *** meta-mion-sde *** - 0ade065 barefoot-sde_9.4.0.bb: Remove APSN specific extract - 22c5239 barefoot-bsp: Add SDE_INSTALL to the envvar - deffc41 barefoot-bsp: Remove platform specific EXTRA_OECONF and patches - 4985fd4 Fix incorrect patch on bf-syslib log patch - 9a20d6a bf_drivers_9.4.0.bb: Add var/log to FILES_${PN) - 60fd7d8 bf-drivers_9.4.0: symlink and log fixes - 17550a1 bf-drivers: Remove unnecessary patch - ae43c79 Update repo dispatch - a21cdca boost/bjam: Add missing patches - 9c1e78f boost_1.67: Readd patches - bd12263 boost: cleanup patches - d6015fe boost: upgrade to 1.67 - 7fae262 README: Add intial README - 6090242 meta-mion-barefoot: bump SDE to 9.4.0 - 50ea611 Add repo dispatch to trigger builds - fc2794a Fix typo in pull request template - 4b09c9b Add pull request template *** mion-docs *** - db9c55f update link and nav - 05c0ead Add 2021.06 release notes - 7f154d8 Update Stratum and Dent information - d719c01 Adding Tn48m - 3cb9f8c Fix markdown syntax issue in getting started guide - ac5ef1d Add note on build script argument order - f0a0ed9 Do final check for adds-and-ends - 5a6bd4a Remove ONIE from qemu example - cabcaf2 Remove example of building ptest image - 11e41ee Apply style-guide rules to mion-docs - 5beb3db Remove partial and empty topics in resources - 2ace8b6 Check all links in mion-docs for correctness - 8656eaa Fix qemu build command in gsg - d68c9bb Move Stratum page info to adds-and-ends.md - ba95415 Document new features for 2021.06 - c111502 Add reference to clone script - 4031f94 Add onie only build info to adds-and-ends.md - 3168a9a Add onie only build info to getting started guide - cf1734f Clean-up changes to adds-and-ends.md - 7e90eea Document Current Container Story - 915b040 getting-started.md: Update build script - e0474bd resources.md: Add missing repos - 62641cb Repurpopse imagetypes.md to outline container story - 26f3b1d Document meta-mion restructure - b9a63ec Remove mender from documentation - a0fa84b Fix typo in pull request template - 3a258e2 Merge pull request #193 from NetworkGradeLinux/johntoomey/github_checklist - b64147e Add pull request template - 8d766c5 Merge pull request #191 from NetworkGradeLinux/kprosise/2021.06-dev - 5958e01 Create dev version for 2021.06 - f1453b8 Fix release year (#188) *** mion-testing *** - cf36192 Upload 2021.06 ptest results - dc39948 Add pull request template - a62435b Merge pull request #2 from NetworkGradeLinux/kprosise/Create-dir-layout - 8fa3713 Add directory placeholders and update - f59fb02 Create testing resource repository","title":2021.06},{"location":"release_notes/2021-06/#mion-dunfell-202106-dernish","text":"","title":"mion dunfell-2021.06 \"Dernish\""},{"location":"release_notes/2021-06/#release-notes","text":"The Network Grade Linux project is very proud to present the fourth release of mion, code-named \"Dernish\". Notable features include support for the Barefoot SDE version 9.4.0, initial support for the Stratum and Dent projects, package management and feeds as well as a new container strategy using containerd.","title":"Release Notes"},{"location":"release_notes/2021-06/#main-features-and-improvements","text":"New BSP: Delta TN48M - backported 5.10 kernel and switchdev support Barefoot SDE version 9.4.0 Initial support for Stratum Initial support for the Dent project (on TN-48M) Lots of documentation and wiki improvements ptest image type for package tests and a defined test plan Defined update strategy, initial package management work and package feeds Reworking of container setup using containerd (and removal of srunc) K3s backported to dunfell in meta-mion-backports Numerous bug fixes and minor improvements","title":"Main features and improvements"},{"location":"release_notes/2021-06/#notable-bug-fixes","text":"Boot issue on APS BF6064 (meta-mion-bsp#47) bf_switchd Takes Longer to launch on mion (meta-mion-sde#13)","title":"Notable bug fixes"},{"location":"release_notes/2021-06/#errata-of-known-issues","text":"Host contamination in ONLPv1 (mion#139) GRUB menu install failure with old version of ONIE (meta-mion#63) NFSD fails to start due to missing kernel module (meta-mion#87) Kernel panic on shutdown with irq_debug.ko (meta-mion-bsp#27) Relink error libm when starting onlpd on BF6064X-T (meta-mion-bsp#58) SMBUS Get Fail (meta-mion-bsp#70) Cannot Access BfRt Python CLI Through bfshell (meta-mion-sde#12) Issue with port state on Barefoot SDE with BF2556X-1T (meta-mion-sde#18) Possible i2c Enumeration Race on BF2556X-1T (meta-mion-sde#20) Error Starting SDE - Hugepages (meta-mion-sde#29) https://docs.mion.io fails multiple accessibility checks (mion-docs#183)","title":"Errata of known issues"},{"location":"release_notes/2021-06/#breaking-changes","text":"meta-mion has been moved to the top of its repo and is no longer shared with other layers meta-mion-backports layer is required by default mc_build.sh has been deprecated in favor of a simpler build script - cronie.sh","title":"Breaking changes"},{"location":"release_notes/2021-06/#git-log","text":"*** mion *** - 445d518 Remove stratum repo from update script - 2f0facf Note build-script argument order in README.md - 04acfad [2021-23] Update submodules - 30c4ce8 repo_dispatch.yml: Fix host name - 3c1e0a5 Add contrib/ dir for community scripts - b19fa3d README.md: Update README to use new build script - 11480cc local.conf: Set default package feed URI - 62f6eb9 Add ptest requirement to local.conf - ca4954f Update repo dispatch - 1c114fd [2021-21] Update submodules - 662dc19 cronie.sh: fix permissions +x - d19781a cronie.sh: simple ONIE-only build script - 5ab450c bblayers.conf: add meta-mion-backports - 11fed5d onie-only-build.sh: Add a simple build script. - 7c9ce91 bblayers.conf: Remove meta-simplerunc. - 430c4b5 [2021-20] Update Submodules. - e60dc00 [2021-19] Update Submodules. - 78b60b3 [2021-17] Update submodules - 78e5994 Remove mender from README.md - 58ca131 Remove meta-mender submodule and mender configs - 53e860a Add pull request template *** meta-mion *** - fc6372a mion.conf: Bumping to Dernish release - 2243436 Add Stratum recipe and config - cfbe8db mion-image-core.inc: Add smarttools to default image - 7d799d9 dent_1.0.bb: Add ifupdown2 as a DEPENDS - ec156ab ifupdown2: Needed for DENT - 291c6c2 mion-onie-image.inc: Require kernel to be deployed - ac98423 mion-onie-image.inc: Ensure no wic image and correct no do_unpack. - a7ea5b6 layer.conf: change bbpriority - 101a4c7 mion-onie-image.inc: Fix bash failures/set no sstate - 51595b9 mion.conf: append IMAGE_FSTYPES - 66c8694 mion-onie-image.inc: Don't do this as IMAGE_POSTPROCESS - 1a0b911 Revert \"Allow additional image fstypes\" - ec89dc9 Allow additional image fstypes - aded7f1 mion.conf: Split distro version into vars - 4958e2b Update repo dispatch - f3561c0 mion-image-core.inc: Add package-management - 2cd9305 Update runner for repo_dispatch - 8a5501c Initial DENT: Support DENT - a7c543e mion.conf: Add ability to build onie images without mc - ede7018 mion-image-core.inc: Add containerd and runc to default - e9dec95 meta-mion: Restructure of meta-mion - 0286d7b meta-mion-simplerunc: Moved to meta-mion-unsupported - a52f83f recipes-core/packagegroups: move packagegroups-* - 7c45564 os-release.bbappend: Remove MACHINE - 9ed6703 onlpdump.service: Reduce timeout on onlpd shutdown - 48f91f2 Add p-test image type - 03591c3 Add aliases script to /etc/profile.d/ - 2bd258b Add pull request template - aa69465 mion-image-core.inc: move dmidecode back from dev - 5f9fbfa mion.conf: Switch to +snapshot DISTRO_VERSION *** meta-mion-backports *** - 2ecd0c5 Apply styleguide rules to README.md - bb35719 Update repo dispatch - e79b7e2 linux-yocto_5.10.bb: Backport from hardknott of 5.10 kernel - b7989a4 Add repo dispatch and fix README file extension - 74c4338 Add k3s and deps from meta-virtualisation *** meta-mion-bsp *** - 55d1d35 barefoot-bsp_9.4.0.bbappend: Wrong path for 2556 patch - 8e838e3 barefoot-bsp_9.4.0.bbappend: put in APSN specific extract - dc7b992 Update qemu bsp info - 42f569a barefoot-bsp_9.4.0.bbappend: appends before machine - c2fec45 Add host include patch bf6064x-t - b76feae barefoot-bsp_9.4.0: Add bbappend for 6064 - 2d35d80 Remove redundant clock source set from init script - 5a7b59b delta-tn48m: Fix kernel and initramfs generation - 152f161 qemu-qemux86-64.conf: Append IMAGE_FSTYPES - 2f778c8 Fix BF6064X-T Platform Initialisation - a81d551 delta-tn48m.conf: Add additional kernel variables - 39a70e4 qemu-qemux86-64.conf: Add ext4 image type. - 7f6ee4d Update repo dispatch - b3be795 0005-fsl-ls1043a-rdb-sdk.patch: Readd patch - f646a08 linux-yocto_5.10.bbappend: Remove unused patches - 1f490c9 meta-mion-delta: initial support for the tn48m - e482692 Add pull request template *** meta-mion-sde *** - 0ade065 barefoot-sde_9.4.0.bb: Remove APSN specific extract - 22c5239 barefoot-bsp: Add SDE_INSTALL to the envvar - deffc41 barefoot-bsp: Remove platform specific EXTRA_OECONF and patches - 4985fd4 Fix incorrect patch on bf-syslib log patch - 9a20d6a bf_drivers_9.4.0.bb: Add var/log to FILES_${PN) - 60fd7d8 bf-drivers_9.4.0: symlink and log fixes - 17550a1 bf-drivers: Remove unnecessary patch - ae43c79 Update repo dispatch - a21cdca boost/bjam: Add missing patches - 9c1e78f boost_1.67: Readd patches - bd12263 boost: cleanup patches - d6015fe boost: upgrade to 1.67 - 7fae262 README: Add intial README - 6090242 meta-mion-barefoot: bump SDE to 9.4.0 - 50ea611 Add repo dispatch to trigger builds - fc2794a Fix typo in pull request template - 4b09c9b Add pull request template *** mion-docs *** - db9c55f update link and nav - 05c0ead Add 2021.06 release notes - 7f154d8 Update Stratum and Dent information - d719c01 Adding Tn48m - 3cb9f8c Fix markdown syntax issue in getting started guide - ac5ef1d Add note on build script argument order - f0a0ed9 Do final check for adds-and-ends - 5a6bd4a Remove ONIE from qemu example - cabcaf2 Remove example of building ptest image - 11e41ee Apply style-guide rules to mion-docs - 5beb3db Remove partial and empty topics in resources - 2ace8b6 Check all links in mion-docs for correctness - 8656eaa Fix qemu build command in gsg - d68c9bb Move Stratum page info to adds-and-ends.md - ba95415 Document new features for 2021.06 - c111502 Add reference to clone script - 4031f94 Add onie only build info to adds-and-ends.md - 3168a9a Add onie only build info to getting started guide - cf1734f Clean-up changes to adds-and-ends.md - 7e90eea Document Current Container Story - 915b040 getting-started.md: Update build script - e0474bd resources.md: Add missing repos - 62641cb Repurpopse imagetypes.md to outline container story - 26f3b1d Document meta-mion restructure - b9a63ec Remove mender from documentation - a0fa84b Fix typo in pull request template - 3a258e2 Merge pull request #193 from NetworkGradeLinux/johntoomey/github_checklist - b64147e Add pull request template - 8d766c5 Merge pull request #191 from NetworkGradeLinux/kprosise/2021.06-dev - 5958e01 Create dev version for 2021.06 - f1453b8 Fix release year (#188) *** mion-testing *** - cf36192 Upload 2021.06 ptest results - dc39948 Add pull request template - a62435b Merge pull request #2 from NetworkGradeLinux/kprosise/Create-dir-layout - 8fa3713 Add directory placeholders and update - f59fb02 Create testing resource repository","title":"Git Log"}]}